//My keybinds:

//Install multi-command extension first for 5x navigate commands, tab-out also recommended

//arrow keys: navigate (even when intellisense pops up!)
//alt+arrow: navigate 5x
//pgdn pgup long scroll
//alt+pgdn pgup: long scroll preview
//ctrl+left or right, ctrl+r or ctrl+shift+r: navigate word
//shift+alt+up or down: move line up/down
//shift+alt+left or right: navigate back/forward
//ctrl+[ or ]: trigger intellisense, next suggestion
//ctrl+\ : accept suggestion
//shift+ctrl+[ or ]: trigger parameter hints, next suggestion
//alt+shift+[ or ]: fold/unfold
//end: go to end
//home: go to start or toggle between whitespace side of start
//ctrl+` or ctrl+shift+q: toggle terminal
//ctrl+shift+v: go to explorer
//ctrl+enter: replace all
//ctrl+t :find symbol
//ctrl+e enter: go to editor
//ctrl+p enter command
//> :line : go to line
//> :line:char : go to line and char
//ctrl+c: copy selection or line / abort
//ctrl+v: paste
//ctrl+x: cut selection or line
//ctrl+shift+k / shift+delete: delete line
//ctrl+d : select current word
//ctrl+space: show hover
//ctrl+shift+space: show context menu
//ctrl+s: save
//ctrl+f: find
//ctrl+shift+f: find in files
//ctrl+h: replace
//tab: navigate menu
//f2: rename
//f12: go to definition
//alt+f12: peek definition
//alt+c: match whole word
//alt+r: match regex
//alt+l search in selection
//ctrl+enter: copilot suggestion
//ctrl+shift+enter: insert line above
//ctrl+alt+enter: insert line below
//ctrl+alt+left: home
//ctrl+alt+right: end
//shift+that: select
//ctrl+shift+=: focus on notification popup
//shift+alt+i: insert cursor at end of each line
//shift+alt+backspace: delete brackets
//shift+backspace: last file
//ctrl+u undo cursor
//ctrl+r start of word
//ctrl+shift+r end of word
//ctrl+alt+r recent folders
//ctrl+. refactor
//ctrl+alt+k: delete above
//ctrl+alt+j: delete below
//ctrl+alt+[number 1-5] Clipboard multi-storage, in progress

//never touch the mouse


[{
    "key": "ctrl+]",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key" : "ctrl+]",
    "command" : "editor.action.triggerSuggest",
    "when" : "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
  },
  {
    "key": "ctrl+\\",
    "command": "acceptSelectedSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible",
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.replaceAll",
    "when": "findWidgetVisible || replaceActive",
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.nextMatchFindAction",
    "when": "findWidgetVisible",
  },
  {
    "key": "ctrl+[",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key" : "ctrl+[",
    "command" : "editor.action.triggerSuggest",
    "when" : "editorTextFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+[",
    "command": "editor.action.previousMatchFindAction",
    "when": "findWidgetVisible || replaceActive",
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
  },
  {
    "key": "up",
    "command": "-showPrevParameterHint",
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
  },
  {
    "key": "down",
    "command": "-showNextParameterHint",
  },
  { "key": "enter",
    "command": "-acceptSelectedSuggestion",
  },
  {
    "key":"alt+down",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "cursorDown",
            "cursorDown",
            "cursorDown",
            "cursorDown",
            "cursorDown"
        ]
    },
    "when":"editorTextFocus"
},
  {
    "key":"alt+up",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "cursorUp",
            "cursorUp",
            "cursorUp",
            "cursorUp",
            "cursorUp"
        ]
    },
    "when":"editorTextFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.navigateBack",
  },
  {
    "key": "shift+alt+right",
    "command": "workbench.action.navigateForward",
  },
  {
    "key":"alt+right",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "cursorRight",
            "cursorRight",
            "cursorRight",
            "cursorRight",
            "cursorRight"
        ]
    },
    "when":"editorTextFocus"
  },
  {
    "key":"alt+backspace",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "deleteLeft",
            "deleteLeft",
            "deleteLeft",
            "deleteLeft",
            "deleteLeft",
        ]
    },
    "when":"editorTextFocus"
  },
  {
    "key":"alt+left",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
            "cursorLeft",
            "cursorLeft",
            "cursorLeft",
            "cursorLeft",
            "cursorLeft"
        ]
    },
    "when":"editorTextFocus"
  },
  {
    "key": "ctrl+shift+]",
    "command": "editor.action.triggerParameterHints",
    "when": "!parameterHintsVisible"
  },
  {
    "key": "ctrl+shift+]",
    "command": "showNextParameterHint",
    "when": "parameterHintsVisible"
  },
  {
    "key": "ctrl+shift+[",
    "command": "editor.action.triggerParameterHints",
    "when": "!parameterHintsVisible"
  },
  {
    "key": "ctrl+shift+[",
    "command": "showPrevParameterHint",
    "when": "parameterHintsVisible"
  },
  {
    "key": "alt+shift+]",
    "command": "editor.unfold",
  },
  {
    "key": "alt+shift+[",
    "command": "editor.fold",
  },
  {
    "key" : "escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetVisible"   
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "editor.action.showContextMenu",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.showHover"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+v",
    "command": "workbench.view.explorer"
  },
  { "key": "ctrl+p",
    "command": "workbench.action.showCommands"
  },
  { "key": "ctrl+alt+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus"
  },
  { "key": "ctrl+alt+left",
    "command": "cursorHome",
    "when": "editorTextFocus"
  },
  { "key": "ctrl+alt+right",
    "command": "cursorEnd",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+=",
    "command": "notifications.focusToasts"
  },
  { "key": "shift+alt+ctrl+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus",
  },
  { 
    "key": "shift+alt+ctrl+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key" : "ctrl+shift+r",
    "command" : "cursorWordRight",
    "when" : "textInputFocus",
  },
  {
    "key": "ctrl+alt+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+alt+j",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
          "cursorDown",
          "editor.action.deleteLines",
          "cursorUp",
        ]
    },
  },
  {
    "key": "ctrl+alt+k",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
          "cursorUp",
          "editor.action.deleteLines",
        ]
    },
  },
  { "key": "ctrl+k ctrl+shift+w",   "command": "-workbench.action.closeAllGroups" },
  { "key": "ctrl+shift+w",          "command": "-workbench.action.closeWindow" },
  {
    "key": "ctrl+alt+1",
    "command": "extension.multiCommand.execute",
    "args": { 
        "sequence": [
          "editor.action.clipboardCopyAction",
          "cursorBottom",
          "editor.action.clipboardPasteAction",
          "cursorUp",
          "editor.action.moveLinesDownAction",
          "editor.action.commentLine",
        ]
    },
  }
  // {
  //   "key": "ctrl+shift+r",
  //   "command": "-editor.action.refactor",
  // },
  // { "key": "ctrl+shift+r",          "command": "-rerunSearchEditorSearch",
  //                                    "when": "inSearchEditor" },
  // { "key": "ctrl+shift+r",          "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
  //                                   "when": "inQuickOpen && inRecentFilesPicker" },
  // { "key": "shift+backspace", 
  //   "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
  //   "when": "!activeEditorGroupEmpty" 
  // },
  // { "key": "shift+backspace",
  //   "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
  //   "when": "inEditorsPicker && inQuickOpen" 
  // },
  
  // { "key": "home",
  //   "command": "cursorHome",
  //   "when": "textInputFocus" 
  // },
  // { 
  //   "key": "shift+home",
  //   "command": "cursorHomeSelect",
  //   "when": "textInputFocus" 
  // },
]